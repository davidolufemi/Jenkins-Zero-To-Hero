# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven App

on:
  workflow_dispatch


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -f java-maven-sonar-argocd-helm-k8s/spring-boot-app/pom.xml clean package

    - name: List files in the workspace
      run: |
        echo "Listing files in the workspace..."
        ls -al /home/runner/work/maven-app/maven-app


  snyk-security:
   runs-on: ubuntu-latest

   steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Install Snyk CLI
    - name: Install Snyk CLI
      run: npm install -g snyk

    # Step 3: Authenticate with Snyk
    - name: Authenticate with Snyk
      run: snyk auth ${{ secrets.SNYK_TOKEN }}

    # Step 4: Run Snyk SAST (Code scanning) with continue-on-error in GitHub Actions
    - name: Run Snyk to check for vulnerabilities in the code (SAST)
      run: snyk code test --continue-on-error
      continue-on-error: true  # This ensures the job continues even if vulnerabilities are found

    # Step 5: Run Snyk to check for vulnerabilities in all projects (SCA)
    - name: Run Snyk to check for vulnerabilities in all projects
      run: snyk test --all-projects --continue-on-error
      continue-on-error: true  # This ensures the job continues even if vulnerabilities are found

    - name: Upload scan results to Snyk UI
      run: snyk monitor --all-projects  # Uploads results to the Snyk dashboard

  
  
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Docker image
        run:  docker buildx build -t maven-app:${GITHUB_SHA} .

      - name: Show Docker images
        run: docker images

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push davidayo97/maven-app:${GITHUB_SHA}
  
      

    
